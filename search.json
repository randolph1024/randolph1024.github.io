[{"title":"Fake.Email_kali","url":"/2022/01/17/Fake-Email_kali/","content":"MTP协议  Mail Transport Protocol\n简单邮件传输协议 (Simple Mail Transfer Protocol, SMTP) Internet传输email的标准。•    SMTP默认端口：25•    SSL SMTP默认端口：465\n\nSMTP相关安全协议 - SPF\n发件人策略框架(Sender Policy Framework ,SPF)是为了防范垃圾邮件而提出来的一种DNS记录类型它是一种TXT类型的记录，它用于登记某个域名拥有的用来外发邮件的所有IP地址。可确定允许哪些邮件服务器代表您的域来发送电子邮件&quot;v=spf1 a:mail.randolph.wang  mx:mail1.qq.com ip4:1.1.1.0/24 -allincloud：spf.mail.qq.com~all&quot;授权mail.randolph.wang服务器发件人以mx记录进行授权任何ip地址在 1.1.1.0 - 1.1.1.255 之间服务器的发信人incloud以网域形式授权\n\n机制参数\nv   spf版本。此标记是必填标记，且必须是记录中第一个标记。必须为v=spf1ip4 以ip4地址或地址范围的形式授权邮件服务器。该值必须为标准格式的IPv4地址或地址范围ip6 以ip6地址或地址范围的形式授权邮件服务器。该值必须为标准格式的IPv6地址或地址范围a   以域名的形式授权邮件服务器mx  以网域的形式授权服务器 EX：a：solar.comincloud     以网域的形式授权第三方电子邮件发件人all         指定所有的传入邮件与该机制匹配。建议始终在spf中包含该机制            必须为spf最后一个参数            `all软失败，邮件接收服务器通常接收未纳入spf记录的邮件，相关邮件标为可疑邮件            ~all失败，邮件接收服务器可能会拒绝未纳入spf记录的邮件，相关邮件标为垃圾邮件\n\nSPF验证原理\n邮件服务器收到了一封邮件，来自主机的IP是1.1.1.4，并且声称发件人为email@ex.com邮件服务器会去查询example.com的 SPF 记录。如果该域的 SPF 记录设置允许 IP为47.100.47.4的主机发送邮件，则服务器就认为这封邮件是合法的；如果不允许，则通常会退信，或将其标记为垃圾/仿冒邮件。\n\nSWAKS\nswaks --to e@ex.com     //测试邮箱的连通性；选项说明：--from  000@qq.com     //发件人邮箱；--ehlo  qq.com      //伪造邮件ehlo头，即是发件人邮箱的域名。提供身份认证--body &quot;http://www.baidu.com&quot;    //引号中的内容即为邮件正文；--header &quot;Subject:邮件标题&quot;   //邮件头信息，subject为邮件标题--data ./Desktop/email.txt    //将正常源邮件的内容保存成TXT文件，再作为正常邮件发送；–attach 添加附件\n","categories":["Fake.Email"],"tags":["Fake.Email"]},{"title":"LVM逻辑卷管理器","url":"/2021/11/30/LVM%E9%80%BB%E8%BE%91%E5%8D%B7%E7%AE%A1%E7%90%86%E5%99%A8/","content":"部署逻辑卷\n查看当前磁盘[root@localhost randy]# ls /dev/sd*/dev/sda  /dev/sda1  /dev/sda2  /dev/sdb  /dev/sdc  /dev/sdd  /dev/sde创建逻辑卷[root@localhost randy]# pvcreate /dev/sd[b-c]  Physical volume &quot;/dev/sdb&quot; successfully created.  Physical volume &quot;/dev/sdc&quot; successfully created.创建逻辑卷组[root@localhost randy]# vgcreate ran /dev/sd[b-c]  Volume group &quot;ran&quot; successfully created逻辑卷组切割  -l制定单元大小    -L制定容量大小[root@localhost randy]# lvcreate -n ra -L 30G ran  Logical volume &quot;ra&quot; created.  LVM仅支持ext3 or 4文件系统格式化root@localhost randy]# mkfs.ext4 /dev/ran/ramke2fs 1.42.9 (28-Dec-2013)Filesystem label=OS type: LinuxBlock size=4096 (log=2)Fragment size=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks1966080 inodes, 7864320 blocks393216 blocks (5.00%) reserved for the super userFirst data block=0Maximum filesystem blocks=2155872256240 block groups32768 blocks per group, 32768 fragments per group8192 inodes per groupSuperblock backups stored on blocks:     32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,     4096000Allocating group tables: done                            Writing inode tables: done                            Creating journal (32768 blocks): doneWriting superblocks and filesystem accounting information: done挂载[root@localhost randy]# mkdir /hh[root@localhost randy]# vim /etc/fstab/dev/ran/ra ext4 defaults 0 0自动挂载[root@localhost randy]# mount -a查看挂载（磁盘格式化相关文件系统后内存略有缩水）[root@localhost randy]# df -hFilesystem               Size  Used Avail Use% Mounted on/dev/mapper/centos-root   30G  4.5G   25G  16% /devtmpfs                 3.8G     0  3.8G   0% /devtmpfs                    3.9G     0  3.9G   0% /dev/shmtmpfs                    3.9G   13M  3.8G   1% /runtmpfs                    3.9G     0  3.9G   0% /sys/fs/cgroup/dev/sda1                297M  153M  145M  52% /boottmpfs                    781M  4.0K  781M   1% /run/user/42tmpfs                    781M   24K  781M   1% /run/user/1000/dev/sr0                 4.2G  4.2G     0 100% /run/media/randy/CentOS 7 x86_64/dev/mapper/ran-ra        30G   45M   28G   1% /hh\n\n扩容逻辑卷\n[randy@localhost ~]$ df -h文件系统                 容量  已用  可用 已用% 挂载点/dev/mapper/centos-root   30G  3.4G   26G   12% /devtmpfs                 1.7G     0  1.7G    0% /devtmpfs                    1.8G     0  1.8G    0% /dev/shmtmpfs                    1.8G   13M  1.7G    1% /runtmpfs                    1.8G     0  1.8G    0% /sys/fs/cgroup/dev/sda1                297M  153M  145M   52% /boot/dev/mapper/ran-ra       9.8G   37M  9.2G    1% /hhtmpfs                    351M  4.0K  351M    1% /run/user/42tmpfs                    351M   24K  351M    1% /run/user/1000/dev/sr0                 4.2G  4.2G     0  100% /run/media/randy/CentOS 7 x86_64卸载逻辑卷[root@localhost randy]# umount /hh扩展逻辑卷容量[root@localhost randy]# lvextend -L +300M /dev/ran/ra  Size of logical volume ran/ra changed from 10.00 GiB (2560 extents) to 10.29 GiB (2635 extents).  Logical volume ran/ra successfully resized.检查硬盘的完整性，确认目录结构、内容和文件内容没有丢失。一般情况下没有报错，均为正常情况[root@localhost randy]# e2fsck -f /dev/ran/rae2fsck 1.42.9 (28-Dec-2013)第一步: 检查inode,块,和大小第二步: 检查目录结构第3步: 检查目录连接性Pass 4: Checking reference counts第5步: 检查簇概要信息/dev/ran/ra: 11/655360 files (0.0% non-contiguous), 83137/2621440 blocks重置设备在系统中的容量。刚刚是对LV（逻辑卷）设备进行了扩容操作，但系统内核还没有同步到这部分新修改的信息，需要手动进行同步[root@localhost randy]# resize2fs /dev/ran/raresize2fs 1.42.9 (28-Dec-2013)Resizing the filesystem on /dev/ran/ra to 2698240 (4k) blocks.The filesystem on /dev/ran/ra is now 2698240 blocks long.自动挂载[root@localhost randy]# mount -a[root@localhost randy]# df -h文件系统                 容量  已用  可用 已用% 挂载点/dev/mapper/centos-root   30G  3.4G   26G   12% /devtmpfs                 1.7G     0  1.7G    0% /devtmpfs                    1.8G     0  1.8G    0% /dev/shmtmpfs                    1.8G   13M  1.7G    1% /runtmpfs                    1.8G     0  1.8G    0% /sys/fs/cgroup/dev/sda1                297M  153M  145M   52% /boottmpfs                    351M  4.0K  351M    1% /run/user/42tmpfs                    351M   24K  351M    1% /run/user/1000/dev/sr0                 4.2G  4.2G     0  100% /run/media/randy/CentOS 7 x86_64/dev/mapper/ran-ra        11G   41M  9.5G    1% /hh\n\n缩小逻辑卷\n[root@localhost randy]# umount /hh检查磁盘是否有损坏   [root@localhost randy]# e2fsck -f /dev/ran/rae2fsck 1.42.9 (28-Dec-2013)第一步: 检查inode,块,和大小第二步: 检查目录结构第3步: 检查目录连接性Pass 4: Checking reference counts第5步: 检查簇概要信息/dev/ran/ra: 11/679936 files (0.0% non-contiguous), 85706/2698240 blocks通知系统将内存修改到5G[root@localhost randy]# resize2fs /dev/ran/ra 5Gresize2fs 1.42.9 (28-Dec-2013)Resizing the filesystem on /dev/ran/ra to 1310720 (4k) blocks.The filesystem on /dev/ran/ra is now 1310720 blocks long.Lv命令缩减空间[root@localhost randy]# lvreduce -L 5G /dev/ran/ra  WARNING: Reducing active logical volume to 5.00 GiB.  THIS MAY DESTROY YOUR DATA (filesystem etc.)Do you really want to reduce ran/ra? [y/n]: y  Size of logical volume ran/ra changed from 10.29 GiB (2635 extents) to 5.00 GiB (1280 extents).  Logical volume ran/ra successfully resized.自动挂载[root@localhost randy]# mount -a[root@localhost randy]# df -h文件系统                 容量  已用  可用 已用% 挂载点/dev/mapper/centos-root   30G  3.4G   26G   12% /devtmpfs                 1.7G     0  1.7G    0% /devtmpfs                    1.8G     0  1.8G    0% /dev/shmtmpfs                    1.8G   13M  1.7G    1% /runtmpfs                    1.8G     0  1.8G    0% /sys/fs/cgroup/dev/sda1                297M  153M  145M   52% /boottmpfs                    351M  4.0K  351M    1% /run/user/42tmpfs                    351M   28K  351M    1% /run/user/1000/dev/sr0                 4.2G  4.2G     0  100% /run/media/randy/CentOS 7 x86_64/dev/mapper/ran-ra       4.8G   33M  4.5G    1% /hh\n\n逻辑卷快照\n[randy@localhost ~]$ df -h文件系统                 容量  已用  可用 已用% 挂载点/dev/mapper/centos-root   30G  3.4G   26G   12% /devtmpfs                 1.7G     0  1.7G    0% /devtmpfs                    1.8G     0  1.8G    0% /dev/shmtmpfs                    1.8G   13M  1.7G    1% /runtmpfs                    1.8G     0  1.8G    0% /sys/fs/cgroup/dev/sda1                297M  153M  145M   52% /boot/dev/mapper/ran-ra       4.8G   33M  4.5G    1% /hhtmpfs                    351M  4.0K  351M    1% /run/user/42tmpfs                    351M   20K  351M    1% /run/user/1000/dev/sr0                 4.2G  4.2G     0  100% /run/media/randy/CentOS 7 x86_64查看逻辑卷剩余和使用的内存[root@localhost randy]# vgdisplay  --- Volume group ---  VG Name               ran  System ID               Format                lvm2  Metadata Areas        2  Metadata Sequence No  4  VG Access             read/write  VG Status             resizable  MAX LV                0  Cur LV                1  Open LV               1  Max PV                0  Cur PV                2  Act PV                2  VG Size               39.99 GiB  PE Size               4.00 MiB  Total PE              10238  Alloc PE / Size       1280 / 5.00 GiB  Free  PE / Size       8958 / 34.99 GiB  VG UUID               4URcXh-G5x8-1I9u-G7q0-1cI2-R1dK-ylqEIM     --- Volume group ---写入一个测试文件[root@localhost randy]# echo &quot;this is test file context let&#x27;s say hello word&quot; &gt; /hh/readme.txt[root@localhost randy]# ll /hh总用量 20drwx------. 2 root root 16384 11月 29 09:08 lost+found-rw-r--r--. 1 root root    47 11月 29 15:21 readme.txt使使用-s参数生成一个快照卷，使用-L参数指定切割的大小，需要与要做快照的设备容量保持一致。另外，还需要在命令后面写上是针对哪个逻辑卷执行的快照操作，稍后数据也会还原到这个相应的设备上[root@localhost randy]# lvcreate -s -n snap -L 5G /dev/ran/ra  Logical volume &quot;snap&quot; created.[root@localhost randy]# dd if=/dev/zero of=/hh/files count=1 bs=100M记录了1+0 的读入记录了1+0 的写出104857600字节(105 MB)已复制，0.638687 秒，164 MB/秒查看生成文件[root@localhost randy]# ll /hh总用量 102420-rw-r--r--. 1 root root 104857600 11月 29 16:05 filesdrwx------. 2 root root     16384 11月 29 09:08 lost+found-rw-r--r--. 1 root root        47 11月 29 15:21 readme.txt取消挂载[root@localhost randy]# umount /hh快照还原[root@localhost randy]# lvconvert --merge /dev/ran/snap  Merging of volume ran/snap started.  ran/ra: Merged: 98.22%  ran/ra: Merged: 100.00%自动挂载[root@localhost randy]# mount -a查看结果[root@localhost randy]# ll /hh总用量 20drwx------. 2 root root 16384 11月 29 09:08 lost+found-rw-r--r--. 1 root root    47 11月 29 15:21 readme.txt\n\n删除逻辑卷\n[root@localhost randy]# umount /hh[root@localhost randy]# vim /etc/fstab[root@localhost randy]# lvremove /dev/ran/raDo you really want to remove active logical volume ran/ra? [y/n]: y  Logical volume &quot;ra&quot; successfully removed[root@localhost randy]# vgremove ran  Volume group &quot;ran&quot; successfully removed[root@localhost randy]# pvremove /dev/sd[b-c]  Labels on physical volume &quot;/dev/sdb&quot; successfully wiped.  Labels on physical volume &quot;/dev/sdc&quot; successfully wiped.\n","categories":["Linux"],"tags":["Linux"]},{"title":"linux RAD磁盘阵列","url":"/2021/11/22/linux-RAD%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/","content":"RAID 0、1、5、10方案技术对比\nRAID级别    最少硬盘    可用容量    读写性能    安全性0           2          n           n        低       追求最大容量和速度，任何一块盘损坏，数据全部异常。1           2          n/2         n        高    追求最大安全性，只要阵列组中有一块硬盘可用，数据不受影响。5           3          n-1         n-1      中    在控制成本的前提下，追求硬盘的最大容量、速度及安全性，允许有一块硬盘异常，数据不受影响。10          4          n/2         n/2      高    综合RAID1和RAID0的优点，追求硬盘的速度和安全性，允许有一半硬盘异常（不可同组），数据不受影响\n\nmdadm命令部署磁盘阵列\n参数    作用-a    检测设备名称-n    指定设备数量-l    指定RAID级别-C    创建-v    显示过程-f    模拟设备损坏-r    移除设备-Q    查看摘要信息-D    查看详细信息-S    停止RAID磁盘阵列\n\n部署测试\n创建阵列[root@linuxprobe ~]# mdadm -Cv /dev/md0 -n 4 -l 10 /dev/sd[b-e]mdadm: layout defaults to n2mdadm: layout defaults to n2mdadm: chunk size defaults to 512Kmdadm: size set to 20954112Kmdadm: Defaulting to version 1.2 metadatamdadm: array /dev/md0 started.--------------------------------------------------初始化过程大约需要1分钟左右，期间可以用-D参数进行查看[root@linuxprobe ~]# mdadm -D /dev/md0/dev/md0:           Version : 1.2     Creation Time : Wed Jan 13 08:24:58 2021        Raid Level : raid10        Array Size : 41908224 (39.97 GiB 42.91 GB)     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)      Raid Devices : 4     Total Devices : 4       Persistence : Superblock is persistent       Update Time : Thu Jan 14 04:49:57 2021             State : clean     Active Devices : 4   Working Devices : 4    Failed Devices : 0     Spare Devices : 0            Layout : near=2        Chunk Size : 512KConsistency Policy : resync              Name : localhost.localdomain:0  (local to host linuxprobe.com)              UUID : 289f501b:3f5f70f9:79189d77:f51ca11a            Events : 17    Number   Major   Minor   RaidDevice State       0       8       16        0      active sync set-A   /dev/sdb       1       8       32        1      active sync set-B   /dev/sdc       2       8       48        2      active sync set-A   /dev/sdd       3       8       64        3      active sync set-B   /dev/sde--------------------------------------------------初始化完成后格式化阵列[root@linuxprobe ~]# mkfs.ext4 /dev/md0mke2fs 1.44.3 (10-July-2018)Creating filesystem with 10477056 4k blocks and 2621440 inodesFilesystem UUID: d1c68318-a919-4211-b4dc-c4437bcfe9daSuperblock backups stored on blocks:     32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,     4096000, 7962624Allocating group tables: done                            Writing inode tables: done                            Creating journal (65536 blocks): doneWriting superblocks and filesystem accounting information: done  --------------------------------------------------挂载硬盘[root@linuxprobe ~]# mkdir /RAID[root@linuxprobe ~]# mount /dev/md0 /RAID[root@linuxprobe ~]# df -hFilesystem             Size  Used Avail Use% Mounted ondevtmpfs               969M     0  969M   0% /devtmpfs                  984M     0  984M   0% /dev/shmtmpfs                  984M  9.6M  975M   1% /runtmpfs                  984M     0  984M   0% /sys/fs/cgroup/dev/mapper/rhel-root   17G  3.9G   14G  23% //dev/sr0               6.7G  6.7G     0 100% /media/cdrom/dev/sda1             1014M  152M  863M  15% /boottmpfs                  197M   16K  197M   1% /run/user/42tmpfs                  197M  3.5M  194M   2% /run/user/0/dev/md0                40G   49M   38G   1% /RAID--------------------------------------------------编辑启动文件[root@linuxprobe ~]# echo &quot;/dev/md0 /RAID ext4 defaults 0 0&quot; &gt;&gt; /etc/fstab\n\n磁盘模拟损坏\n[root@linuxprobe ~]# mdadm /dev/md0 -f /dev/sdb--------------------------------------------------移除故障磁盘[root@linuxprobe ~]# mdadm /dev/md0 -r /dev/sdb--------------------------------------------------更换硬盘后添加硬盘[root@linuxprobe ~]# mdadm /dev/md0 -a /dev/sdb\n\n磁盘阵列+备份盘    -x参数为备份参数\n[root@linuxprobe ~]# mdadm -Cv /dev/md0 -n 3 -l 5 -x 1 /dev/sd[b-e]\n","categories":["Linux"],"tags":["Linux"]},{"title":"linux 基础命令","url":"/2021/10/13/linux-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/","content":"top命令用于动态地监视进程活动及系统负载等信息\n系统状态：R（运行）S（中断、休眠）D（不可中断、无法kill）Z（僵死\\吃资源）T（停止）优先级（&lt;）、低优先级（N）、被锁进内存（L）、包含子进程（s）以及多线程（l）优先级（&lt;）低优先级（N）、被锁进内存（L）、包含子进程（s）以及多线程（l）load acerage负载值: 1分钟  5分钟（睡不着负载超过5导致系统缓慢运行崩溃，有超过10并运行正常的例子）  15分钟cpu us（当前负载）id（空闲值）pid（进程号）pr和ni（优先级越小越优先）【VIRT、RES、SHR交互值】----------------------------------------------------------kill -9 进程号                  参数-9，表示最高级别地强制杀死进程systemctl status 进程名        【查看该进程状态】ps查看简要信息 -aux【a=allu=userx=system】uname命令用于查看系统内核版本与系统架构等信息，-a参数来完整地查看    当前系统的内核名称、主机名、内核发行版本、节点名、压制时间、硬件名称    硬件平台、处理器类型以及操作系统名称等信息\n\nwget命令用于在终端命令行中下载网络文件\nwget+option+url    -c断点续传 -O以不同的文件名保存-b后台下载（大文件）tail -f wget - log查看下载进度  -spider+url 下载链接测试\n\n网卡:\nubuntu@VM-0-6-ubuntu:~$ ifconfigeth0【网卡名称】: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500inet 172.17.0.6【IP地址】 netmask 255.255.240.0【子网掩码】broadcast 172.17.15.255【网关】inet6 fe80::5054:ff:fe2f:6517  prefixlen 64  scopeid 0x20&lt;link&gt;ether 52:54:00:2f:65:17【mac地址】txqueuelen 1000  (Ethernet)RX packets 5856430 bytes 982163097 (982.1 MB)【收取包】RX errors 0  dropped 0  overruns 0  frame 0TX packets 5377542 bytes 777598829 (777.5 MB)【发送包】TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0netstat命令用于显示如网络连接、路由表、接口状态等的网络相关信息-a显示所有连接中的Socket-p显示正在使用的Socket信息-t显示TCP协议的连接状态-u显示UDP协议的连接状态-n使用IP地址，不使用域名-l仅列出正在监听的服务状态-i显示网卡列表信息-r显示路由表信息\nfree命令用于显示当前系统中内存的使用量信息\nubuntu@VM-0-6-ubuntu:~$ free -htotal      used        free    shared  buff/cache   availableMem【物理内存】:1.9Gi     747Mi       149Mi    2.0Mi    1.1Gi       1.0GiSwap【虚拟内存】: 0B       0B          0B\n\nwho命令用于查看当前登入主机的用户终端信息\nubuntu@VM-0-6-ubuntu:~$ whoubuntu   pts/0        2021-10-24 23:25 (119.28.22.215)ubuntu   pts/1        2021-10-24 23:30 (119.28.22.215)[root@linuxprobe ~]# last用于调取主机的被访记录【无法判断是否被入侵】root     pts/1        192.168.10.1     Tue May 18 10:30 - 11:03  (00:32)root     tty2         tty2             Fri Jul 24 06:26    gone - no logoutreboot   system boot  4.18.0-80.el8.x8 Fri Jul 24 05:59   still runningroot     tty2         tty2             Tue Jul 21 05:19 - down   (00:00)reboot   system boot  4.18.0-80.el8.x8 Tue Jul 21 05:16 - 05:19  (00:02)history历史命令执行记录【！+编号可再执行history命令】sosreport命令用于收集系统配置及架构信息并输出诊断文档tree查看目录结构cd-返回上一次cd..返回上一级lsal=ll【.filename隐藏文件】whereis命令用于按照名称快速搜索二进制程序，语法格式为“whereis命令名称”which命令用于按照指定名称快速搜索二进制程序所对应的位置，语法格式为“which命令名称cat看小文件more看大文件head看头tail看尾tr命令用于替换文本内容中的字符，英文全称为“transform”，语法格式为“tr [原始字符] [目标字符]”         [root@linuxprobe ~]# cat anaconda-ks.cfg | tr [a-z] [A-Z]wc命令用于统计指定文本文件    -l只显示行数   -w只显示单词数   -c只显示字节数stat命令用于查看文件的具体存储细节和时间等信息stat+filenamegrep命令用于按行提取文本内容，语法格式为“grep [参数] 文件名称cut命令用于按“列”提取文本内容，语法格式为“cut [参数] 文件名称diff命令用于比较多个文件之间内容的差异，英文全称为“different”，语法格式为“diff [参数] 文件名称A 文件名称B”uniq命令用于去除文本中连续的重复行，英文全称为“unique”，语法格式为“uniq [参数] 文件名称sort命令用于对文本内容进行再排序，语法格式为“sort [参数] 文件名称\n\n文件目录管理命令\ntouch命令用于创建空白文件或设置文件的时间，语法格式为“touch [参数] 文件名称-a仅修改“读取时间”（atime）  -m仅修改“修改时间”（mtime）  -d同时修改atime与mtime-------------------------------------------------------------------------mkdir命令用于创建空白的目录，英文全称为“make directory”，语法格式为“mkdir [参数] 目录名称        mkdir -p a/b/c/d/e-p递归参数------------------------------------------------------------------cp命令用于复制文件或目录，英文全称为“copy”，语法格式为“cp [参数] 源文件名称 目标文件名称-p保留原始文件的属性               -d若对象为“链接文件”，则保留该“链接文件”的属性-r递归持续复制（用于目录）          -i若目标文件存在则询问是否覆盖-a相当于-pdr（p、d、r为上述参数）---------------------------------------------------------mv命令用于剪切或重命名文件，语法格式为“mv [参数] 源文件名称 目标文件名称----------------------------------------------------------------------rm命令用于删除文件或目录，语法格式为rm [参数] 文件    名称-f强制执行   -i删除前询问   -r删除目录    -v显示过程----------------------------------------------------------------------dd命令用于按照指定大小和个数的数据块来复制文件或转换文件，语法格式为“dd if=参数值of=参数值count=参数值bs=参数值if 输入的文件名称                of 输出的文件名称bs 设置每个“块”的大小            count 设置要复制“块”的个数---------------------------------------------------------------file命令用于查看文件的类型，语法格式为“file文件名称-----------------------------------------------------------------tar命令用于对文件进行打包压缩或解压，语法格式为“tar参数 文件名称-c创建压缩文件    -x解开压缩文件    -t查看压缩包内有哪些文件-z用Gzip压缩或解压    -j用bzip2压缩或解压    -v显示压缩或解压的过程-f目标文件名    -p保留原始的权限与属性    -P使用绝对路径来压缩    -C指定解压到的目录tar-zxvffilename-Curl解压参数可以不加-czvffilename.tar.gzcjvffilename.tar.bz2\n","categories":["Linux"],"tags":["Linux"]},{"title":"linux-用户文件权限","url":"/2021/11/07/linux-%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/","content":"用户身份与能力:管理员UID为0：系统的管理员用户。系统用户UID为1～999：Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器，默认服务程序会由独立的系统用户负责运行，进而有效控制被破坏范围。普通用户UID从1000开始：是由管理员创建的用于日常工作的用户    系统用户：      RHEl7 UID:1-999    RHEL5-6 UID:1-499    普通用户：      RHEl7 UID:1000-♾️    RHEL5-6 UID:500-65535用户组：    基本组：默认生成（只能有一个）    扩展组：获取额外权限（可以添加多个）\nid命令用于显示用户的详细信息，语法格式为“id用户名”----------------------------------------------useradd命令用于创建新的用户账户，语法格式为“useradd [参数] 用户名”-d    指定用户的家目录（默认为/home/username）-e    账户的到期时间，格式为YYYY-MM-DD.-u    指定该用户的默认UID-g    指定一个初始的用户基本组（必须已存在）-G    指定一个或多个扩展用户组-N    不创建与用户同名的基本用户组-s    指定该用户的默认Shell解释器-----------------------------------------------groupadd命令用于创建新的用户组，语法格式为“groupadd [参数] 群组名”-----------------------------------------------usermod命令用于修改用户的属性，语法格式为“usermod [参数] 用户名”-c    填写用户账户的备注信息-d -m    参数-m与参数-d连用，可重新指定用户的家目录并自动把旧的数据转移过去-e    账户的到期时间，格式为YYYY-MM-DD-g    变更所属用户组-G    变更扩展用户组-L    锁定用户禁止其登录系统-U    解锁用户，允许其登录系统-s    变更默认终端-u    修改用户的UID------------------------------------------------passwd命令用于修改用户的密码、过期时间等信息，语法格式为“passwd [参数] 用户名”-l    锁定用户，禁止其登录-u    解除锁定，允许用户登录--stdin    允许通过标准输入修改用户密码，如echo &quot;NewPassWord&quot; | passwd --stdin Username-d    使该用户可用空密码登录系统-e    强制用户在下次登录时修改密码-S    显示用户的密码是否被锁定，以及密码所采用的加密算法名称-------------------------------------------------userdel命令用于删除已有的用户账户，语法格式为“userdel [参数] 用户名”-f    强制删除用户-r    同时删除用户及用户家目录\n\n文件权限与归属\n            文件          目录读取(r)      cat          ls写入(w)      vim          touch执行(x)     ./script      cd------------------------------------------------权限项     读 写 执行      读 写 执行   读  写 执行宁符表示    r  w  x       r  w  x     r  w  x 数宁表示    4  2  1       4  2  1     4  2  1 权限分配    文件所属者      文件所属组     其他用户chown 修改所有者、所有组  文件名chomd 权限  文件名称 （修改权限）\n\n文件的特殊权限SUID    使文件执行者临时获得文件所有者身权限SGID    使文件执行者临时获得文件所有用户组权限SBIT    粘滞位（保护位）只能被文件所有者执行删除修改\nchmod：u+s    设置SUID权限u-s    取消SUID权限g+s    设置SGID权限g-s    取消SGID权限o+t    设置SBIT权限o-t    取消SBIT权限\n\n文件的隐藏属性\nchattr命令用于设置文件的隐藏权限，语法格式为“chattr +or-[参数] 文件名称”i    无法对文件进行修改；若对目录设置了该参数，则仅能修改其中的子文件内容而不能新建或删除文件a    仅允许补充（追加）内容，无法覆盖/删除内容（Append Only）S    文件内容在变更后立即同步到硬盘（sync）s    彻底从硬盘中删除，不可恢复（用0填充原文件所在硬盘区域）A    不再修改这个文件或目录的最后访问时间（atime）b    不再修改文件或目录的存取时间D    检查压缩文件中的错误d    使用dump命令备份时忽略本文件/目录c    默认将文件或目录进行压缩u    当删除该文件后依然保留其在硬盘中的数据，方便日后恢复t    让文件系统支持尾部合并（tail-merging）x    可以直接访问压缩文件中的内容------------------------------------------------lsattr命令用于查看文件的隐藏权限，语法格式为“lsattr [参数] 文件名称”or lsattr 文件名称\n\n文件访问控制列表\nsetfacl命令用于管理文件的ACL权限规则，语法格式为“setfacl [参数] 文件名称”-u    对于某个用户u:username:rwx-m    修改权限-M    从文件中读取权限-x    删除某个权限-b    删除全部权限-R    递归子目录------------------------------------------------------getfacl命令用于查看文件的ACL权限规则，语法格式为“getfacl [参数] 文件名称”清空所有ACL权限，请用-b参数；要删除某一条指定的权限，就用-x参数\nsu命令与sudo服务\nsu命令可以解决切换用户身份的需求sudo命令用于给普通用户提供额外的权限，语法格式为“sudo [参数] 用户名”-h    列出帮助信息-l    列出当前用户可执行的命令-u    用户名或UID值    以指定的用户身份执行命令-k    清空密码的有效时间，下次执行sudo时需要再次进行密码验证-b    在后台执行指定的命令-p    更改询问密码的提示语--------------------------------------------------------visudo命令用于编辑、配置用户sudo的权限文件，语法格式为“visudo [参数]”。visudo命令只有root管理员才可以执行，普通用户在使用时会提示权限不足\n","categories":["Linux"],"tags":["Linux"]},{"title":"linux 存储结构与管理硬盘","url":"/2021/11/15/linux%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%A1%E7%90%86%E7%A1%AC%E7%9B%98/","content":"一切从“&#x2F;”开始\n绝对路径（absolute path）：从/根目录写起相对路径（relative path）：当前路径写起--------------------------------------------------/boot\t\t开机所需文件—内核、开机菜单以及所需配置文件等/dev\t\t以文件形式存放任何设备与接口/etc\t\t配置文件/home\t\t用户家目录/bin\t\t存放单用户模式下还可以操作的命令/lib\t\t开机时用到的函数库，以及/bin与/sbin下面的命令要调用的函数/sbin\t\t开机过程中需要的命令/media\t\t用于挂载设备文件的目录/opt\t\t放置第三方的软件/root\t\t系统管理员的家目录/srv\t\t一些网络服务的数据文件目录/tmp\t\t任何人均可使用的“共享”临时目录/proc\t\t虚拟文件系统，例如系统内核、进程、外部设备及网络状态等/usr/local\t用户自行安装的软件/usr/sbin\tLinux系统开机时不会使用到的软件/命令/脚本/usr/share\t帮助与说明文件，也可放置共享文件/var\t    主要存放经常变化的文件，如日志/lost+found\t当文件系统发生错误时，将一些丢失的文件片段存放在这里\n\n物理设备的命名规则\nIDE设备\t\t\t/dev/hd[a-d]SCSI/SATA/U盘\t/dev/sd[a-z]virtio设备\t\t/dev/vd[a-z]软驱\t\t\t\t/dev/fd[0-1]打印机\t\t\t/dev/lp[0-15]光驱\t\t\t\t/dev/cdrom鼠标\t\t\t\t/dev/mouse磁带机\t\t\t/dev/st0或/dev/ht0\n\n主分区配置\n[root@localhost randy]# ls /dev/sdb  查看当前新磁盘/dev/sdb[root@localhost randy]# fdisk /dev/sdbWelcome to fdisk (util-linux 2.23.2).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.Device does not contain a recognized partition tableBuilding a new DOS disklabel with disk identifier 0xf1fda1bf.n代表新建主分区Command (m for help): nPartition type:   p   primary (0 primary, 0 extended, 4 free)   e   extendedp新建主分区Select (default p): p配置分区编号Partition number (1-4, default 1): 1分区大小默认2048（不重要）First sector (2048-41943039, default 2048): 2048设置分区大小Last sector, +sectors or +size&#123;K,M,G&#125; (2048-41943039, default 41943039): +2GPartition 1 of type Linux and of size 2 GiB is setp查看当前分区Command (m for help): pDisk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0xf1fda1bf   Device Boot      Start         End      Blocks   Id  System/dev/sdb1            2048     4196351     2097152   83  Linuxw保存当前分区信息Command (m for help): wThe partition table has been altered!Calling ioctl() to re-read partition table.Syncing disks.查看建好的分区[root@localhost randy]# ls /dev/sdb/dev/sdb[root@localhost randy]# ls /dev/sdb1/dev/sdb1格式化分区   根据系统类型进行格式化[root@localhost randy]# mkfs.ext4 /dev/sdb1mkfs.btrfs   mkfs.ext2    mkfs.ext4    mkfs.minix   mkfs.vfat    mkfs.cramfs  mkfs.ext3    mkfs.fat     mkfs.msdos   mkfs.xfs  进行挂载（同一个目录只能挂载一个硬盘）[root@localhost randy]# mkdir /ran  创建目录[root@localhost randy]# mount /dev/sdb1 /ran  进行挂载[root@localhost randy]# df -lh  查看挂载好的目录Filesystem               Size  Used Avail Use% Mounted on/dev/mapper/centos-root   30G  4.4G   25G  16% /devtmpfs                 471M     0  471M   0% /devtmpfs                    488M     0  488M   0% /dev/shmtmpfs                    488M  8.6M  479M   2% /runtmpfs                    488M     0  488M   0% /sys/fs/cgroup/dev/sda1                297M  140M  157M  48% /boottmpfs                     98M  4.0K   98M   1% /run/user/42tmpfs                     98M   36K   98M   1% /run/user/1000/dev/sr0                 4.2G  4.2G     0 100% /run/media/randy/CentOS 7 x86_64/dev/sdb1                2.0G  6.0M  1.8G   1% /ran编辑/etc/fstab(重启生效配置)磁盘的名称+磁盘挂载目录+文件系统格式+磁盘权限默认（defaults）+是否进行自动备份+是否进行自动校验（0否）/dev/sdb1 /ran ext4 defaults 0 0du -sh /* 查看每一个文件占用的大小\n\n交换分区swap扩展\n[root@localhost /]# fdisk /dev/sdbWelcome to fdisk (util-linux 2.23.2).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.Command (m for help): n 创建新分区Partition type:   p   primary (1 primary, 0 extended, 3 free)   e   extendedSelect (default p): e 新建扩展分区Partition number (2-4, default 2): 2  默认First sector (4196352-41943039, default 4196352): Using default value 4196352Last sector, +sectors or +size&#123;K,M,G&#125; (4196352-41943039, default 41943039): Using default value 41943039Partition 2 of type Extended and of size 18 GiB is setCommand (m for help): n 扩展分区不能直接使用继续创建Partition type:   p   primary (1 primary, 1 extended, 2 free)   l   logical (numbered from 5)Select (default p): l  新建逻辑分区Adding logical partition 5  默认First sector (4198400-41943039, default 4198400): Using default value 4198400Last sector, +sectors or +size&#123;K,M,G&#125; (4198400-41943039, default 41943039): +3G    Partition 5 of type Linux and of size 3 GiB is setCommand (m for help): p 查看信息Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0xf1fda1bf   Device Boot      Start         End      Blocks   Id  System/dev/sdb1            2048     4196351     2097152   83  Linux/dev/sdb2         4196352    41943039    18873344    5  Extended/dev/sdb5         4198400    10489855     3145728   83  LinuxCommand (m for help): w 保存The partition table has been altered!Calling ioctl() to re-read partition table.WARNING: Re-reading the partition table failed with error 16: Device or resource busy.The kernel still uses the old table. The new table will be used atthe next reboot or after you run partprobe(8) or kpartx(8)Syncing disks.查看后未显示[root@localhost /]# ll /dev/sdb*brw-rw----. 1 root disk 8, 16 Nov 11 09:18 /dev/sdbbrw-rw----. 1 root disk 8, 17 Nov 11 09:18 /dev/sdb1使用partprobe命令执行一遍不行就两遍，或重启机器[root@localhost /]# partprobeWarning: Unable to open /dev/sr0 read-write (Read-only file system).  /dev/sr0 has been opened read-only.[root@localhost /]# ll /dev/sdb*brw-rw----. 1 root disk 8, 16 Nov 11 09:19 /dev/sdbbrw-rw----. 1 root disk 8, 17 Nov 11 09:19 /dev/sdb1brw-rw----. 1 root disk 8, 18 Nov 11 09:19 /dev/sdb2brw-rw----. 1 root disk 8, 21 Nov 11 09:19 /dev/sdb5专门格式化swap的命令[root@localhost /]# mkswap /dev/sdb5mkswap: /dev/sdb5: warning: wiping old swap signature.Setting up swapspace version 1, size = 3145724 KiBno label, UUID=ff4a6e32-b89b-4a96-9fc1-1b320be08be3开启交换分区[root@localhost /]# swapon /dev/sdb5编辑/etc/fstab(重启生效配置)交换分区无挂载目录！！！/dev/sdb5 swap swap defaults 0 0\n\n磁盘配额xfs系统可用（磁盘权限后+uquota）系统不同版本参数不同\nUUID=224730b9-5486-45e5-b15c-abc3c5b4d2ca /boot       xfs     defaults,uquota查看是否开启usrquota显示开启成功[root@localhost randy]# mount | grep boot/dev/sda1 on /boot type xfs (rw,relatime,seclabel,attr2,inode64,usrquota)x专家模式\t c非交互式 \t [root@localhost randy]# xfs_quota -x -c &#x27;limit bsoft=3m bhard=6m isoft=3 ihard=6 randy&#x27; /boot修改限制edquota -u randyisoft软限制（提示警告信息）    ihard硬限制（终止操作）  限制文件个数bsoft    bhard  限制文件大小\n\n软硬方式链接ln命令用于创建文件的软硬链接，语法格式为“ln [参数]原始文件名 链接文件名”\n-s\t创建“符号链接”（如果不带-s参数，则默认创建硬链接）-f\t强制创建文件或目录的链接-i\t覆盖前先询问-v\t显示创建链接的过程软连接=快捷方式   硬链接=再复制文件\n\nVDO虚拟数据优化VDO（Virtual Data Optimize，虚拟数据优化）是一种通过压缩或删除存储设备上的数据来优化存储空间的技术VDO技术的关键就是对硬盘内原有的数据进行删重操作，它有点类似于我们平时使用的网盘服务，在第一次正常上传文件时速度特别慢在第二次上传相同的文件时仅作为一个数据指针，几乎可以达到“秒传”的效果，无须再多占用一份空间，也不用再漫长等待除了删重操作，VDO技术还可以对日志和数据库进行自动压缩，进一步减少存储浪费的情况\n|dickens|狄更斯文集\t\t\t\t\t\t|英文原文\t\t\t|9953\t|9948\t||mozilla|Mozilla的1.0可执行文件\t\t\t|执行程序\t\t\t|50020\t|33228\t||mr\t\t|医用resonanse图像\t\t\t\t|图片\t\t\t\t|9736\t|9272\t||nci\t|结构化的化学数据库\t\t\t\t|数据库\t\t\t\t|32767\t|10168\t||ooffice|Open Office.org 1.01 DLL\t\t|可执行程序\t\t\t|6008\t|5640\t||osdb\t|基准测试用的MySQL格式示例数据库|数据库\t\t\t\t|9849\t|9824\t||reymont|瓦迪斯瓦夫·雷蒙特的书\t\t\t|PDF\t\t\t\t|6471\t|6312\t||samba\t|samba源代码\t\t\t\t\t|src源码\t\t\t|21100\t|11768\t||sao\t|星空数据\t\t\t\t\t\t|天文格式的bin文件\t|7081\t|7036\t||webster|辞海\t\t\t\t\t\t\t|HTML\t\t\t\t|40487\t|40144\t||xml\t|XML文件\t\t\t\t\t\t|HTML\t\t\t\t|5220\t|2180\t||x-ray\t|透视医学图片\t\t\t\t\t|医院数据\t\t\t|8275\t|8260\t|\n\nRHEL&#x2F;CentOS 8系统中默认已经启用了VDO技术。VDO技术现在是红帽公司自己的技术，兼容性自然没得说如果您所用的系统没有安装VDO的话也不要着急，用dnf命令即可完成安装：\n[root@linuxprobe ~]# dnf install kmod-kvdo vdoUpdating Subscription Management repositories.Unable to read consumer identityThis system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.Last metadata expiration check: 0:01:56 ago on Wed 06 Jan 2021 10:37:19 PM CST.Package kmod-kvdo-6.2.0.293-50.el8.x86_64 is already installed.Package vdo-6.2.0.293-10.el8.x86_64 is already installed.Dependencies resolved.Nothing to do.Complete!\n\n首先，创建一个全新的VDO卷。新添加进来的物理设备就是使用vdo命令来管理的，其中name参数代表新的设备卷的名称；device参数代表由哪块磁盘进行制作；vdoLogicalSize参数代表制作后的设备大小。依据红帽公司推荐的原则，20GB硬盘将翻成200GB的逻辑存储：\n[root@linuxprobe ~]# vdo create --name=storage --device=/dev/sdc --vdoLogicalSize=200GCreating VDO storageStarting VDO storageStarting compression on VDO storageVDO instance 0 volume is ready at /dev/mapper/storage\n\n在创建成功后，使用status参数查看新建卷的概述信息：\n[root@linuxprobe ~]# vdo status --name=storageVDO status:  Date: &#x27;2021-01-06 22:51:33+08:00&#x27;  Node: linuxprobe.comKernel module:  Loaded: true  Name: kvdo  Version information:    kvdo version: 6.2.0.293Configuration:  File: /etc/vdoconf.yml  Last modified: &#x27;2021-01-06 22:49:33&#x27;VDOs:  storage:    Acknowledgement threads: 1    Activate: enabled    Bio rotation interval: 64    Bio submission threads: 4    Block map cache size: 128M    Block map period: 16380    Block size: 4096    CPU-work threads: 2    Compression: enabled    Configured write policy: auto    Deduplication: enabled………………省略部分输出信息………………\n\n有上可见，在输出信息中包含了VDO卷创建的时间、主机名、版本、是否压缩（Compression）及是否删重（Deduplication）等关键信息。\n接下来，对新建卷进行格式化操作并挂载使用。新建的VDO卷设备会被乖乖地存放在&#x2F;dev&#x2F;mapper目录下并以设备名称命名，对它操作就行。另外，挂载前可以用udevadm settle命令对设备进行一次刷新操作，避免刚才的配置没有生效：\n[root@linuxprobe ~]# mkfs.xfs /dev/mapper/storage meta-data=/dev/mapper/storage    isize=512    agcount=4, agsize=13107200 blks         =                       sectsz=4096  attr=2, projid32bit=1         =                       crc=1        finobt=1, sparse=1, rmapbt=0         =                       reflink=1data     =                       bsize=4096   blocks=52428800, imaxpct=25         =                       sunit=0      swidth=0 blksnaming   =version 2              bsize=4096   ascii-ci=0, ftype=1log      =internal log           bsize=4096   blocks=25600, version=2         =                       sectsz=4096  sunit=1 blks, lazy-count=1realtime =none                   extsz=4096   blocks=0, rtextents=0[root@linuxprobe ~]# udevadm settle[root@linuxprobe ~]# mkdir /storage[root@linuxprobe ~]# mount /dev/mapper/storage /storage\n\n如果想查看设备的实际使用情况，使用vdostats命令即可human-readable参数的作用是将存储容量自动进位，以人们更易读的方式输出（比如，显示20G而不是20971520K）：\n[root@linuxprobe ~]# vdostats --human-readableDevice                    Size      Used Available Use% Space saving%/dev/mapper/storage      20.0G      4.0G     16.0G  20%           99%\n\n这里显示的Size是实际物理存储的空间大小（即20.0GB是硬盘的大小）如果想看逻辑存储空间，可以使用df命令进行查看：\n[root@linuxprobe ~]# df -hFilesystem             Size  Used Avail Use% Mounted ondevtmpfs               969M     0  969M   0% /devtmpfs                  984M     0  984M   0% /dev/shmtmpfs                  984M  9.6M  974M   1% /runtmpfs                  984M     0  984M   0% /sys/fs/cgroup/dev/mapper/rhel-root   17G  3.9G   14G  23% //dev/sr0               6.7G  6.7G     0 100% /media/cdrom/dev/sda1             1014M  152M  863M  15% /boottmpfs                  197M   16K  197M   1% /run/user/42tmpfs                  197M  3.5M  194M   2% /run/user/0/dev/sdb1              2.0G   47M  2.0G   3% /newFS/dev/mapper/storage    200G  2.4G  198G   2% /storage\n\n随便复制一个大文件过来，看看占用了多少容量，以及空间节省率（Space saving）是多少：\n[root@linuxprobe ~]# ls -lh /media/cdrom/images/install.img -r--r--r--. 1 root root 448M Apr 4 2019 /media/cdrom/images/install.img[root@linuxprobe ~]# cp /media/cdrom/images/install.img /storage/[root@linuxprobe ~]# ls -lh /storage/install.img -r--r--r--. 1 root root 448M Jan  6 23:06 /storage/install.img[root@linuxprobe ~]# vdostats --human-readableDevice                    Size      Used Available Use% Space saving%/dev/mapper/storage      20.0G      4.4G     15.6G  22%           18%\n\n效果不明显，再复制一份相同的文件过来，看看这次占用了多少空间：\n[root@linuxprobe ~]# cp /media/cdrom/images/install.img /storage/rhel.img[root@linuxprobe ~]# vdostats --human-readableDevice                    Size      Used Available Use% Space saving%/dev/mapper/storage      20.0G      4.5G     15.5G  22%           55%原先448MB的文件这次只占用了不到100MB的容量，空间节省率也从18%提升到了55%当然这还仅仅是两次操作而已，好处就已经如此明显了\n\n最后，将设备设置成永久挂载生效，一直提供服务VDO设备卷在创建后会一直存在，但需要手动编辑&#x2F;etc&#x2F;fstab文件后才能在下一次重启后自动挂载生效，为我们所用对于这种逻辑存储设备，其实不太建议使用&#x2F;dev&#x2F;mapper&#x2F;storage作为设备名进行挂载试试UUID\n[root@linuxprobe ~]# blkid /dev/mapper/storage /dev/mapper/storage: UUID=&quot;cd4e9f12-e16a-415c-ae76-8de069076713&quot; TYPE=&quot;xfs&quot;\n\n打开&#x2F;etc&#x2F;fstab文件，把对应的字段填写完整。建议再加上_netdev参数表示等系统及网络都启动后再挂载VDO设备卷，以保证万无一失。\n[root@linuxprobe ~]# vim /etc/fstabUUID=cd4e9f12-e16a-415c-ae76-8de069076713    /storage  xfs   defaults,_netdev   0 0 \n","categories":["Linux"],"tags":["Linux"]},{"title":"linux 通道符","url":"/2021/10/15/linux-%E9%80%9A%E9%81%93%E7%AC%A6/","content":"输出重定向\n清空写入 &gt;追加写入 &gt;&gt;报错写入 2&gt;全部输出 &amp;&gt;\n\n输入重定向 \n文件导入 &lt;传递信息(传送门) |\n\n命令行的通配符\n*    任意字符?    单个任意字符[a-z]    单个小写字母[A-Z]    单个大写字母[a-Z]    单个字母[0-9]    单个数字[[:alpha:]]    任意字母[[:upper:]]    任意大写字母[[:lower:]]    任意小写字母[[:digit:]]    所有数字[[:alnum:]]    任意字母加数字[[:punct:]]    标点符号\n\n转译字符\n反斜杠（\\）：使反斜杠后面的一个变量变为单纯的字符。单引号（&#x27; &#x27;）：转义其中所有的变量为单纯的字符串。双引号（&quot; &quot;）：保留其中的变量属性，不进行转义处理。反引号（` `）：把其中的命令执行后返回结果。\n\n重要的环境变量\nHOME    用户的主目录（即家目录）SHELL    用户在使用的Shell解释器名称HISTSIZE    输出的历史命令记录条数HISTFILESIZE    保存的历史命令记录条数MAIL    邮件保存路径LANG    系统语言、语系名称RANDOM    生成一个随机数字PS1    Bash解释器的提示符PATH    定义解释器搜索用户执行命令的路径EDITOR    用户默认的文本编辑器\n配置主机名称\nvim /etc/hostname\n\n配置网卡信息\n[root@linuxprobe ~]# cd /etc/sysconfig/network-scripts/[root@linuxprobe network-scripts]# vim ifcfg-ens160TYPE=EthernetBOOTPROTO=staticNAME=ens160ONBOOT=yesIPADDR=192.168.10.10NETMASK=255.255.255.0GATEWAY=192.168.10.1DNS1=192.168.10.1执行重启网卡设备的命令，然后通过ping命令测试网络能否连通[root@linuxprobe network-scripts]# nmcli connection reload ens160[root@linuxprobe network-scripts]# ping 192.168.10.10PING 192.168.10.10 (192.168.10.10) 56(84) bytes of data.64 bytes from 192.168.10.10: icmp_seq=1 ttl=64 time=0.083 ms64 bytes from 192.168.10.10: icmp_seq=2 ttl=64 time=0.110 ms64 bytes from 192.168.10.10: icmp_seq=3 ttl=64 time=0.106 ms64 bytes from 192.168.10.10: icmp_seq=4 ttl=64 time=0.035 ms^C--- 192.168.10.10 ping statistics ---4 packets transmitted, 4 received, 0% packet loss, time 84msrtt min/avg/max/mdev = 0.035/0.083/0.110/0.031 ms\n\n配置软件仓库\n进入/etc/yum.repos.d目录后创建软件仓库的配置文件[root@linuxprobe ~]# cd /etc/yum.repos.d/[root@linuxprobe yum.repos.d]# vim rhel8.repo[BaseOS]name=BaseOSbaseurl=file:///media/cdrom/BaseOSenabled=1gpgcheck=0[AppStream]name=AppStreambaseurl=file:///media/cdrom/AppStreamenabled=1gpgcheck=0创建挂载点后进行挂载操作，并设置成开机自动挂载[root@linuxprobe yum.repos.d]# mkdir -p /media/cdrom [root@linuxprobe yum.repos.d]# mount /dev/cdrom /media/cdrommount: /media/cdrom: WARNING: device write-protected, mounted read-only.[root@linuxprobe yum.repos.d]# vim /etc/fstab/dev/cdrom /media/cdrom iso9660 defaults 0 0使用软件仓库的dnf命令来安装Web服务，软件包名称为httpd，安装后出现“Complete!”则代表配置正确[root@linuxprobe ~]# dnf install httpd -yUpdating Subscription Management repositories.Unable to read consumer identityThis system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.AppStream 3.1 MB/s | 3.2 kB 00:00BaseOS 2.7 MB/s | 2.7 kB 00:00Dependencies resolved.………………省略部分输出信息………………Installed:httpd-2.4.37-10.module+el8+2764+7127e69e.x86_64apr-util-bdb-1.6.1-6.el8.x86_64apr-util-openssl-1.6.1-6.el8.x86_64apr-1.6.3-9.el8.x86_64apr-util-1.6.1-6.el8.x86_64httpd-filesystem-2.4.37-10.module+el8+2764+7127e69e.noarchhttpd-tools-2.4.37-10.module+el8+2764+7127e69e.x86_64mod_http2-1.11.3-1.module+el8+2443+605475b7.x86_64redhat-logos-httpd-80.7-1.el8.noarchComplete!\n","categories":["Linux"],"tags":["Linux"]},{"title":"page","url":"/2023/12/26/page/","content":""}]